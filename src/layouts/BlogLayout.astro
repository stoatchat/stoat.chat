---
import StyleConstants, {
    COLOUR_ULTRA_PINK,
} from "../components/layout/StyleConstants.astro"
import Footer from "../components/layout/Footer.astro"
import BlogHeader from "../components/layout/BlogHeader.astro"
import ContentStyles from "../components/layout/ContentStyles.astro"
import Navbar from "../components/layout/Navbar.astro"
import type { ChangelogProduct } from "../lib/decl"
import ChangelogTag from "../components/blog/ChangelogTag.astro"

interface Props {
    title: string
    description: string
    htmlTitleOverride?: string
    backgroundColor?: string
    foregroundColor?: string
    coverImageURL?: string
    product?: ChangelogProduct
}

const {
    title,
    backgroundColor,
    htmlTitleOverride,
    description,
    coverImageURL,
    product,
} = Astro.props
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content={description} />
        <meta
            name="keywords"
            content="Revolt, chat, messaging, open-source, community, customisation"
        />
        <meta name="author" content="Revolt" />
        <meta name="theme-color" content={COLOUR_ULTRA_PINK} />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
		<link rel="alternate" type="application/rss+xml" title="RSS feed of Revolt blog posts." href="https://revolt.chat/updates/blog-feed.xml">
		<link rel="alternate" type="application/rss+xml" title="RSS feed of Revolt changelogs." href="https://revolt.chat/updates/changelog-feed.xml">
        <title>{htmlTitleOverride || `${title} - Revolt`}</title>
        <StyleConstants />
    </head>
    <body>
        <Navbar />
        {
            coverImageURL && (
                <div class="cover-image">
                    <div
                        class="cover-image-overlay"
                        style={{
                            "--background-image-decl": `url(${coverImageURL})`,
                        }}
                    />
                </div>
            )
        }
        <div class="blog-header">
            <img
                src={coverImageURL}
                alt=""
                aria-hidden="true"
                class="inline-cover-image"
            />
            {product && <ChangelogTag product={product} />}
            <BlogHeader title={title} description={description} />
        </div>
        <main class="blog-page">
            <aside class="blog-meta">
                <slot name="meta" />
            </aside>
            <article class="blog-content">
                <ContentStyles>
                    <slot />
                </ContentStyles>
            </article>
        </main>
        <Footer />
    </body>
</html>
<style lang="scss" define:vars={{ backgroundColor, coverImageURL }}>
    .blog-header {
        padding-top: 15rem;
        max-width: min(130ch, 90vw);
        margin: 0 auto;
    }

    .blog-meta {
        padding: 1.5rem 0;
        padding-right: 3rem;
    }

    .blog-content {
        padding-bottom: 7rem;
    }

    .blog-page {
        max-width: min(130ch, 90vw);
        margin: 0 auto;
        display: grid;
        grid-template-columns: 1fr 9fr;

        aside {
            min-width: calc(22ch);
            word-wrap: break-word;
        }
    }

    .cover-image {
        width: 100%;
        height: 100vh;
        object-fit: cover;
        object-position: center;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        z-index: -1;
    }

    .cover-image-overlay {
        width: 100%;
        height: 120vh;
        background:
            linear-gradient(
                to bottom,
                rgba(0, 0, 0, 0.5),
                var(--backgroundColor) 60%
            ),
            var(--background-image-decl) center / cover no-repeat;
        backdrop-filter: blur(1rem);
        position: absolute;
        top: 0;
        left: 0;
    }

    .inline-cover-image {
        max-width: 100%;
        aspect-ratio: 5 / 2;
        object-fit: cover;
        object-position: center;
        border-radius: 0.5rem;
        margin-bottom: 3rem;
    }

    @media (max-width: 768px) {
        .blog-page {
            grid-template-columns: 1fr;
        }
    }
</style>
<style is:global define:vars={{ backgroundColor }}>
    body {
        max-width: 100vw;
        overflow-x: hidden;
        margin: 0;
        padding: 0;
        background-color: var(--backgroundColor, #0c0c1f);
        color: var(--foreground-color, white);
        font-family: var(--typeface-primary);
        font-feature-settings: var(--typeface-primary-ffs);
        font-optical-sizing: auto;
    }

    code {
        font-size: 1.25em;
    }

    ::-webkit-scrollbar {
        width: 3px;
        height: 3px;
    }

    ::-webkit-scrollbar-track {
        background: transparent;
    }

    ::-webkit-scrollbar-thumb {
        background: var(--colour-ultra-pink);
    }
</style>
